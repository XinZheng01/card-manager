<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.zx.project</groupId>
  <artifactId>card-manager</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>card-manager</name>

  <properties>
    <main.verticle>com.zx.project.cardmanager.MainVerticle</main.verticle>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <vertx.version>3.5.2</vertx.version>
    <log4j.version>2.8</log4j.version>
    <mysql.version>5.1.44</mysql.version>
    <jooq.generate.url></jooq.generate.url>
    <jooq.generate.user></jooq.generate.user>
    <jooq.generate.password></jooq.generate.password>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-jdbc-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.jklingsporn</groupId>
      <artifactId>vertx-jooq-rx-jdbc</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-redis-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-web-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-rx-java2</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-mail-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-unit</artifactId>
      <version>${vertx.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-config</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <!-- Logging dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.22</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <!--<dependency>-->
      <!--<groupId>org.apache.logging.log4j</groupId>-->
      <!--<artifactId>log4j-1.2-api</artifactId>-->
      <!--<version>${log4j.version}</version>-->
    <!--</dependency>-->
    <dependency>
      <groupId>xyz.jetdrone</groupId>
      <artifactId>hot-reload</artifactId>
      <version>0.0.4</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
      <version>${vertx.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <useIncrementalCompilation>false</useIncrementalCompilation>
            <generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
            <generatedTestSourcesDirectory>src/test/generated</generatedTestSourcesDirectory>
          </configuration>
          <executions>
            <execution>
              <id>default-compile</id>
              <configuration>
                <annotationProcessors>
                  <annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
                </annotationProcessors>
                <generatedSourcesDirectory>src/main/generated</generatedSourcesDirectory>
                <compilerArgs>
                  <arg>-Acodegen.output=${project.basedir}/src/main</arg>
                  <!--<arg>-AoutputDirectory=${project.basedir}/src/main</arg>-->
                </compilerArgs>
              </configuration>
            </execution>
            <execution>
              <id>default-testCompile</id>
              <configuration>
                <annotationProcessors>
                  <annotationProcessor>io.vertx.codegen.CodeGenProcessor</annotationProcessor>
                </annotationProcessors>
                <generatedTestSourcesDirectory>src/test/generated</generatedTestSourcesDirectory>
                <compilerArgs>
                  <arg>-Acodegen.output=${project.basedir}/src/test</arg>
                </compilerArgs>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <!-- Specify the maven code generator plugin -->
          <groupId>org.jooq</groupId>
          <artifactId>jooq-codegen-maven</artifactId>
          <version>3.10.7</version>
          <!-- The plugin should hook into the generate goal -->
          <executions>
            <execution>
              <goals>
                <goal>generate</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <groupId>mysql</groupId>
              <artifactId>mysql-connector-java</artifactId>
              <version>${mysql.version}</version>
            </dependency>
            <dependency>
              <groupId>io.github.jklingsporn</groupId>
              <artifactId>vertx-jooq-generate</artifactId>
              <version>3.1.0</version>
            </dependency>
          </dependencies>
          <!-- Specify the plugin configuration.
               The configuration format is the same as for the standalone code generator -->
          <configuration>
            <!-- JDBC connection parameters -->
            <jdbc>
              <driver>com.mysql.jdbc.Driver</driver>
              <url>${jooq.generate.url}</url>
              <user>${jooq.generate.user}</user>
              <password>${jooq.generate.password}</password>
            </jdbc>
            <!-- Generator parameters -->
            <generator>
              <name>io.github.jklingsporn.vertx.jooq.generate.VertxGenerator</name>
              <!-- use 'io.github.jklingsporn.vertx.jooq.generate.rx.VertxGuiceRXGenerator' to enable Guice DI -->
              <database>
                <name>org.jooq.util.mysql.MySQLDatabase</name>
                <includes>.*</includes>
                <inputSchema>YOUR_INPUT_SCHEMA</inputSchema>
                <outputSchema>YOUR_OUTPUT_SCHEMA</outputSchema>
                <unsignedTypes>false</unsignedTypes>
                <forcedTypes>
                  <!-- Convert tinyint to boolean -->
                  <forcedType>
                    <name>BOOLEAN</name>
                    <types>(?i:TINYINT)</types>
                  </forcedType>
                  <!-- Convert varchar column with name 'jsonObject' to a io.vertx.core.json.JsonObject-->
                  <forcedType>
                    <userType>io.vertx.core.json.JsonObject</userType>
                    <converter>io.github.jklingsporn.vertx.jooq.shared.JsonObjectConverter</converter>
                    <expression>jsonObject</expression>
                    <types>.*</types>
                  </forcedType>
                  <!-- Convert varchar column with name 'jsonArray' to a io.vertx.core.json.JsonArray-->
                  <forcedType>
                    <userType>io.vertx.core.json.JsonArray</userType>
                    <converter>io.github.jklingsporn.vertx.jooq.shared.JsonArrayConverter</converter>
                    <expression>jsonArray</expression>
                    <types>.*</types>
                  </forcedType>
                </forcedTypes>
              </database>
              <target>
                <!-- This is where jOOQ will put your files -->
                <packageName>YOUR_TARGET_PACKAGE_HERE</packageName>
                <directory>YOUR_TARGET_DIRECTORY_HERE</directory>
              </target>
              <generate>
                <interfaces>true</interfaces>
                <!--<daos>true</daos>-->
                <fluentSetters>true</fluentSetters>
              </generate>
              <strategy>
                <name>io.github.jklingsporn.vertx.jooq.generate.rx.JDBCRXVertxGeneratorStrategy</name>
              </strategy>
            </generator>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <!--<resources>-->
      <!--<resource>-->
        <!--<directory>src/main/resources</directory>-->
        <!--<includes>-->
          <!--<include>**/*.properties</include>-->
          <!--<include>**/*.xml</include>-->
          <!--<include>**/*.json</include>-->
        <!--</includes>-->
        <!--<filtering>false</filtering>-->
      <!--</resource>-->
    <!--</resources>-->
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>
                    <Main-Class>io.vertx.core.Launcher</Main-Class>
                    <Main-Verticle>${main.verticle}</Main-Verticle>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/services/io.vertx.core.spi.VerticleFactory</resource>
                </transformer>
              </transformers>
              <artifactSet>
              </artifactSet>
              <outputFile>${project.build.directory}/${project.artifactId}-${project.version}-fat.jar</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
